<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" InitialTargets="EnsureWixToolsetInstalled" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">x86</Platform>
    <ProductVersion>3.10</ProductVersion>
    <ProjectGuid>497df16b-c711-4f4e-833b-28acd094d9ab</ProjectGuid>
    <SchemaVersion>2.0</SchemaVersion>
    <OutputName>Reconoser</OutputName>
    <OutputType>Bundle</OutputType>
    <SccProjectName>SAK</SccProjectName>
    <SccProvider>SAK</SccProvider>
    <SccAuxPath>SAK</SccAuxPath>
    <SccLocalPath>SAK</SccLocalPath>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x86' ">
    <OutputPath>bin\$(Configuration)\</OutputPath>
    <IntermediateOutputPath>obj\$(Configuration)\</IntermediateOutputPath>
    <DefineConstants>Debug</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x86' ">
    <OutputPath>bin\$(Configuration)\</OutputPath>
    <IntermediateOutputPath>obj\$(Configuration)\</IntermediateOutputPath>
    <DefineConstants>
    </DefineConstants>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="Bundle.wxs" />
  </ItemGroup>
  <ItemGroup>
    <WixExtension Include="WixNetFxExtension">
      <HintPath>$(WixExtDir)\WixNetFxExtension.dll</HintPath>
      <Name>WixNetFxExtension</Name>
    </WixExtension>
    <WixExtension Include="WixBalExtension">
      <HintPath>$(WixExtDir)\WixBalExtension.dll</HintPath>
      <Name>WixBalExtension</Name>
    </WixExtension>
  </ItemGroup>
  <ItemGroup>
    <Folder Include="MC\KB" />
    <Folder Include="redist" />
    <Folder Include="logo" />
    <Folder Include="MC\" />
    <Folder Include="MC\2010\" />
    <Folder Include="MC\2013\" />
    <Folder Include="Morpho Smart Driver\" />
    <Folder Include="Morpho Smart Driver\x64\" />
    <Folder Include="Morpho Smart Driver\x86\" />
    <Folder Include="WacomDriver\" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="Licencia.rtf" />
    <Content Include="logo\icon-olimpia-6.png" />
    <Content Include="MC\2010\vcredist_x86.exe" />
    <Content Include="MC\2013\vcredist_x86.exe" />
    <Content Include="MC\KB\Windows6.1-KB3153171-x64.msu" />
    <Content Include="MC\KB\Windows6.1-KB3153171-x86.msu" />
    <Content Include="Morpho Smart Driver\x64\Data1.cab" />
    <Content Include="Morpho Smart Driver\x64\MorphoSmart USB 64 bits Driver.msi" />
    <Content Include="Morpho Smart Driver\x64\setup.exe" />
    <Content Include="Morpho Smart Driver\x86\Data1.cab" />
    <Content Include="Morpho Smart Driver\x86\MorphoSmart USB Driver.msi" />
    <Content Include="Morpho Smart Driver\x86\setup.exe" />
    <Content Include="redist\NDP46-KB3045557-x86-x64-AllOS-ENU.exe" />
    <Content Include="WacomDriver\Wacom-STU-SigCaptX-1.4.7.exe" />
    <Content Include="WacomDriver\Wacom-STU-SigCaptX.msi" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Instalador Reconoser\ReconoserServicio.wixproj">
      <Name>ReconoserServicio</Name>
      <Project>{f1323507-0313-488d-8fdc-be441ed8bece}</Project>
      <Private>True</Private>
      <DoNotHarvest>True</DoNotHarvest>
      <RefProjectOutputGroups>Binaries;Content;Satellites</RefProjectOutputGroups>
      <RefTargetDir>INSTALLFOLDER</RefTargetDir>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(WixTargetsPath)" Condition=" '$(WixTargetsPath)' != '' " />
  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\WiX\v3.x\Wix.targets" Condition=" '$(WixTargetsPath)' == '' AND Exists('$(MSBuildExtensionsPath32)\Microsoft\WiX\v3.x\Wix.targets') " />
  <Target Name="EnsureWixToolsetInstalled" Condition=" '$(WixTargetsImported)' != 'true' ">
    <Error Text="The WiX Toolset v3.11 (or newer) build tools must be installed to build this project. To download the WiX Toolset, see http://wixtoolset.org/releases/" />
  </Target>
  <!--
	To modify your build process, add your task inside one of the targets below and uncomment it.
	Other similar extension points exist, see Wix.targets.
	<Target Name="BeforeBuild">
	</Target>
	<Target Name="AfterBuild">
	</Target>
	-->
  <!-- SignOutput must be present in some PropertyGroup to trigger signing. -->
  <PropertyGroup>
    <SignOutput>true</SignOutput>
  </PropertyGroup>
  <!-- Find Windows Kit path and then SignTool path for the post-build event -->
  <Target Name="FindSignTool">
    <PropertyGroup>
      <WindowsKitsRoot>$([MSBuild]::GetRegistryValueFromView('HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows Kits\Installed Roots', 'KitsRoot10', null, RegistryView.Registry32, RegistryView.Default))</WindowsKitsRoot>
      <WindowsKitsRoot Condition="'$(WindowsKitsRoot)' == ''">$([MSBuild]::GetRegistryValueFromView('HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows Kits\Installed Roots', 'KitsRoot81', null, RegistryView.Registry32, RegistryView.Default))</WindowsKitsRoot>
      <WindowsKitsRoot Condition="'$(WindowsKitsRoot)' == ''">$([MSBuild]::GetRegistryValueFromView('HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows Kits\Installed Roots', 'KitsRoot', null, RegistryView.Registry32, RegistryView.Default))</WindowsKitsRoot>
      <SignToolPath Condition="'$(SignToolPath)' == '' And '$(Platform)' == 'AnyCPU' and Exists('$(WindowsKitsRoot)bin\x86\signtool.exe')">$(WindowsKitsRoot)bin\x86\</SignToolPath>
      <SignToolPath Condition="'$(SignToolPath)' == '' And Exists('$(WindowsKitsRoot)bin\$(Platform)\signtool.exe')">$(WindowsKitsRoot)bin\$(Platform)\</SignToolPath>
      <SignToolPathBin Condition="'$(SignToolPath)' == ''">$([System.IO.Directory]::GetDirectories('$(WindowsKitsRoot)bin',"10.0.*"))</SignToolPathBin>
      <SignToolPathLen Condition="'$(SignToolPathBin)' != ''">$(SignToolPathBin.Split(';').Length)</SignToolPathLen>
      <SignToolPathIndex Condition="'$(SignToolPathLen)' != ''">$([MSBuild]::Add(-1, $(SignToolPathLen)))</SignToolPathIndex>
      <SignToolPathBase Condition="'$(SignToolPathIndex)' != ''">$(SignToolPathBin.Split(';').GetValue($(SignToolPathIndex)))\</SignToolPathBase>
      <SignToolPath Condition="'$(SignToolPath)' == '' And '$(SignToolPathBase)' != '' And '$(Platform)' == 'AnyCPU'">$(SignToolPathBase)x86\</SignToolPath>
      <SignToolPath Condition="'$(SignToolPath)' == '' And '$(SignToolPathBase)' != ''">$(SignToolPathBase)$(Platform)\</SignToolPath>
    </PropertyGroup>
  </Target>
  <!-- Sign the bundle engine -->
  <Target Name="SignBundleEngine" DependsOnTargets="FindSignTool">
    <Exec Command="&quot;$(SignToolPath)signtool.exe&quot; sign /d &quot;Reconoser Notarias&quot; /fd SHA256 /td SHA256 /a /tr http://timestamp.digicert.com /a &quot;@(SignBundleEngine)&quot;" />
  </Target>
  <!-- Sign the final bundle -->
  <Target Name="SignBundle" DependsOnTargets="FindSignTool">
    <Exec Command="&quot;$(SignToolPath)signtool.exe&quot; sign /d &quot;Reconoser Notarias&quot; /fd SHA256 /td SHA256 /a /tr http://timestamp.digicert.com /a &quot;@(SignBundle)&quot;" />
  </Target>
</Project>